                                                                                                  # Recursive method to insert element in sorted way
 
def sortedInsert(s, element):
    if len(s) == 0 or element > s[-1]:                                                            # default
        s.append(element)
        return
    else:
 
                                                                                                  # Remove the top item and recur
        temp = s.pop()
        sortedInsert(s, element)
 
                                                                                                  # Put back the top item removed earlier
        s.append(temp)
 
                                                                                                  # Method to sort stack
def sortStack(s):
 
                                                                                                  # If stack is not empty
    if len(s) != 0:
 
                                                                                                  # Remove the top item
        temp = s.pop() 
 
                                                                                                  # Sort remaining stack
        sortStack(s)
 
                                                                                                  # Push the top item back in sorted stack
        sortedInsert(s, temp)
 
                                                                                                  # Printing contents of stack
def printStack(s):
    for i in s[::-1]:
        print(i, end=" ")
    print()
 
 
# Driver Code
if __name__ == '__main__':
    s = []
    s.append(60)
    s.append(-21)
    s.append(69)
    s.append(54)
    s.append(-20)
    print("Stack elements before sorting: ")
    printStack(s)
    sortStack(s)
    print("\nStack elements after sorting: ")
    printStack(s)
    
    
    
    
    
    
    
