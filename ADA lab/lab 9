* ADA Assignment 9 Problem 1
AKshat Shrinate 
SID- 21105010*/


def knapSack(W, wg, profit, n):                                                          # Define Knapsack function to solve the knapsack problem 
  
 # Base Case
    if n == 0 or W == 0:                                                              # Base Case
        return 0
                                                                                      # If weight of the nth item is
                                                                                      # more than Knapsack of capacity W,
                                                                                      # then this item cannot be included
                                                                                      # in the optimal solution
    if (wg[n-1] > W):
        return knapSack(W, wg, profit, n-1)
 
                                                                                      # return the maxi,ized value of two cases:
                                                                                      # (1) nth item included
                                                                                      # (2) not included
    else:
        return max(
            profit[n-1] + knapSack( W-wg[n-1], wg, profit, n-1),
            knapSack(W, wg, profit, n-1))

#int main
if __name__ == '__main__':
    profit = [60, 100, 120]
    weight = [10, 20, 30]
    W = 50
    n = len(profit)
    print knapSack(W, weight, profit, n)
